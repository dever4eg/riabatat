service: riabatat
frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-central-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [riabatatDevUsersTable, Arn]

  stage: dev

plugins:
  - serverless-offline

resources:
  Resources:
    riabatatDevUsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: riabatat-dev-users-table
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

functions:
  hello:
    handler: handler.hello
    events:
     - httpApi:
         path: /users/create
         method: get

  telegram-webhook:
    handler: backend/handlers/telegram-webhook.handler
    events:
     - httpApi:
         path: /telegram-webhook
         method: POST
    environment:
      TELEGRAM_TOKEN: ${env:TELEGRAM_TOKEN}

  settings-update:
    handler: backend/handlers/settings-api.update
    events:
     - httpApi:
         path: /settings
         method: PATCH

  car-finder:
    handler: backend/handlers/car-finder-scheduler.handler
    events:
     - schedule: rate(2 hours)
    environment:
      RIA_API_KEY: ${env:RIA_API_KEY}
      TELEGRAM_TOKEN: ${env:TELEGRAM_TOKEN}
